[
  {
    "id": "flow1",
    "type": "tab",
    "label": "Air Quality Polling",
    "disabled": false
  },
  {
    "id": "kafkaClient",
    "type": "kafkajs-client",
    "name": "Kafka docker-compose",
    "brokers": "kafka:9092",
    "clientId": "node-red",
    "timeout": 30000,
    "connectionTimeout": 30000,
    "useSSL": false,
    "useSasl": false
  },
  {
    "id": "tick",
    "type": "inject",
    "z": "flow1",
    "name": "Tick co 2 min",
    "props": [{ "p": "payload" }],
    "repeat": "120",
    "once": true,
    "onceDelay": 1,
    "topic": "",
    "payloadType": "date",
    "x": 140,
    "y": 100,
    "wires": [["buildUrl"]]
  },
  {
  "id": "buildUrl",
  "type": "function",
  "z": "flow1",
  "name": "Buduj URL-e",
  "func": "// Lista miast\nconst cities = [\n  { name: 'Warsaw',  lat: 52.2297, lon: 21.0122 },\n  { name: 'Cracow', lat: 50.0647, lon: 19.9450 }\n];\n\n// Klucz z .env przekazany do kontenera\nconst apiKey = env.get('OPENWEATHER_KEY') || '';\n\n// Każdy element to oddzielny URL + meta\nmsg.payload = cities.map(c => ({\n  url: `https://api.openweathermap.org/data/2.5/air_pollution?lat=${c.lat}&lon=${c.lon}&appid=${apiKey}`,\n  city: c.name\n}));\nreturn msg;",
  "outputs": 1,
  "noerr": 0,
  "initialize": "",
  "finalize": "",
  "libs": [],
  "x": 340,
  "y": 120,
  "wires": [["splitUrls"]]
  },
  {
    "id": "splitUrls",
    "type": "split",
    "z": "flow1",
    "name": "Split na URL-e",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": "1",
    "arraySpltType": "len",
    "stream": false,
    "x": 560,
    "y": 100,
    "wires": [["httpGet"]]
  },
  {
    "id": "httpGet",
    "type": "http request",
    "z": "flow1",
    "name": "Pobierz AQI",
    "method": "GET",
    "ret": "obj",
    "paytoqs": false,
    "url": "{{{payload.url}}}",
    "tls": "",
    "persist": false,
    "x": 770,
    "y": 100,
    "wires": [["addMeta"]]
  },
  {
    "id": "addMeta",
    "type": "function",
    "z": "flow1",
    "name": "Dodaj metadane",
    "func": "// -------------- Dodaj metadane --------------\n// msg.payload = dane z OpenWeather\n// msg.city     = nazwa miasta (przechodząca z poprzednich węzłów)\n\nconst city  = (msg.city || msg.payload.city || 'unknown').toString();\nconst pm25  = msg.payload?.list?.[0]?.components?.pm2_5 ?? null;\n\nmsg.payload = {\n  device: `sensor-${city.toLowerCase()}`,\n  city,                // np. \"Warsaw\"\n  pm25,                // np. 12.3\n  ts:   Date.now()     // znacznik czasu\n};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 980,
    "y": 100,
    "wires": [["toKafka"]]
  },
  {
    "id": "toKafka",
    "type": "kafkajs-producer",
    "z": "flow1",
    "name": "Do Kafka",
    "client": "kafkaClient",
    "topic": "air_quality",
    "acks": "-1",
    "compression": 0,
    "x": 1180,
    "y": 100,
    "wires": []
  }
]
